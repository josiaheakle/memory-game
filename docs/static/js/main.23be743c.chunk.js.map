{"version":3,"sources":["components/MemoryGameHeader.js","imgs/6-croissant.svg","imgs/7-eggplant.svg","imgs/8-watermelon.svg","imgs/42-salad.svg","imgs/44-taco.svg","imgs/46-french-fries.svg","imgs/47-burger.svg","imgs/48-hot-dog.svg","imgs/49-pizza.svg","imgs/53-pancake.svg","imgs/54-bacon.svg","imgs/55-fried-egg.svg","imgs/57-cheese.svg","imgs/67-corn.svg","imgs/68-carrot.svg","imgs/69-cucumber.svg","imgs/71-tomato.svg","imgs/72-avocado.svg","imgs/73-kiwi.svg","imgs/74-pineapple-1.svg","components/MemoryCard.js","imgs/75-peach.svg","components/MemoryCards.js","components/MemoryGame.js","App.js","index.js"],"names":["MemoryGameHeader","props","className","highScore","score","MemoryCard","id","onClick","clickAction","src","alt","title","MemoryCards","counter","getId","useState","memoryCardsDom","setMemoryCardsDom","memoryCards","croissantIcon","eggplantIcon","watermelonIcon","saladIcon","tacoIcon","frenchFriesIcon","burgerIcon","hotDogIcon","pizzaIcon","pancakeIcon","baconIcon","friedEggIcon","cheeseIcon","cornIcon","carrotIcon","cucumberIcon","tomatoIcon","avocadoIcon","kiwiIcon","pineappleIcon","randomizeCards","cards","randomizedCards","usedIndexes","i","length","rand","Math","floor","random","includes","push","map","card","handleCardClick","event","onCardClick","target","useEffect","randomize","MemoryGame","setScore","setHighScore","clickedCards","setClickedCards","setRandomize","hasPlayed","setHasPlayed","messageToUser","setMessageToUser","handleGameOver","document","body","scrollIntoView","behavior","block","saveHighScore","localStorage","setItem","hs","getItem","undefined","getHighScoreFromMemory","cardId","gameOver","forEach","messages","getRandomGoodMessage","href","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.23be743c.chunk.js","sourcesContent":["import './css/MemoryGameHeader.css'\n\nconst MemoryGameHeader = (props) => {\n\n    /*\n    props: \n        highScore, score\n    */\n\n    return(\n        <div className='Memory-Game-Header'>\n            <h1> Don't Forget! </h1>\n            <div className='score-container'>\n                <span className='score'>\n                    <span className='score-name'> High Score: </span>\n                    <span className='score-num'> {props.highScore} </span>\n                </span>\n                <span className='score'>\n                    <span className='score-name'> Score: </span>\n                    <span className='score-num'> {props.score} </span>\n                </span>\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default MemoryGameHeader;","export default __webpack_public_path__ + \"static/media/6-croissant.a6cc9eb2.svg\";","export default __webpack_public_path__ + \"static/media/7-eggplant.3a9b86e2.svg\";","export default __webpack_public_path__ + \"static/media/8-watermelon.128a672b.svg\";","export default __webpack_public_path__ + \"static/media/42-salad.a6b61417.svg\";","export default __webpack_public_path__ + \"static/media/44-taco.402b061d.svg\";","export default __webpack_public_path__ + \"static/media/46-french-fries.c88a577f.svg\";","export default __webpack_public_path__ + \"static/media/47-burger.1d7a5c87.svg\";","export default __webpack_public_path__ + \"static/media/48-hot-dog.8300bd5b.svg\";","export default __webpack_public_path__ + \"static/media/49-pizza.5cc9ddc6.svg\";","export default __webpack_public_path__ + \"static/media/53-pancake.833ec15f.svg\";","export default __webpack_public_path__ + \"static/media/54-bacon.992c8428.svg\";","export default __webpack_public_path__ + \"static/media/55-fried-egg.98581b6a.svg\";","export default __webpack_public_path__ + \"static/media/57-cheese.9ccbbde3.svg\";","export default __webpack_public_path__ + \"static/media/67-corn.0ddf9b61.svg\";","export default __webpack_public_path__ + \"static/media/68-carrot.e17d9524.svg\";","export default __webpack_public_path__ + \"static/media/69-cucumber.5d2bb1ba.svg\";","export default __webpack_public_path__ + \"static/media/71-tomato.24f78cb4.svg\";","export default __webpack_public_path__ + \"static/media/72-avocado.cfe4f3da.svg\";","export default __webpack_public_path__ + \"static/media/73-kiwi.33de3d28.svg\";","export default __webpack_public_path__ + \"static/media/74-pineapple-1.fd32e2fb.svg\";","// import React from \"react\"\nimport { useEffect } from \"react\";\nimport \"./css/MemoryCard.css\"\n\n\nconst MemoryCard = ( props ) => {\n\n    /*\n    props: \n        title:       name of card/ icon\n        src  :       img src \n        id   :       unique id to check if it has been clicked already\n        clickAction: parent method called when card is clicked\n    */\n    \n\n    return(\n        <div id={props.id} className='Memory-Card' onClick={props.clickAction}>\n            <img id={props.id} src={props.src} alt={props.title}/>\n            <h3 id={props.id}>{props.title}</h3>\n        </div>\n    );\n}\n\n\nexport default MemoryCard;","export default __webpack_public_path__ + \"static/media/75-peach.60b25927.svg\";","import React, { useState, useEffect } from \"react\"\n\n// ICONS ============================== ICONS\nimport croissantIcon from \"../imgs/6-croissant.svg\"\nimport eggplantIcon from \"../imgs/7-eggplant.svg\"\nimport watermelonIcon from \"../imgs/8-watermelon.svg\"\nimport saladIcon from \"../imgs/42-salad.svg\"\nimport tacoIcon from \"../imgs/44-taco.svg\"\nimport frenchFriesIcon from \"../imgs/46-french-fries.svg\"\nimport burgerIcon from \"../imgs/47-burger.svg\"\nimport hotDogIcon from \"../imgs/48-hot-dog.svg\"\nimport pizzaIcon from \"../imgs/49-pizza.svg\"\nimport pancakeIcon from \"../imgs/53-pancake.svg\"\nimport baconIcon from \"../imgs/54-bacon.svg\"\nimport friedEggIcon from \"../imgs/55-fried-egg.svg\"\nimport cheeseIcon from \"../imgs/57-cheese.svg\"\nimport cornIcon from \"../imgs/67-corn.svg\"\nimport carrotIcon from \"../imgs/68-carrot.svg\"\nimport cucumberIcon from \"../imgs/69-cucumber.svg\"\nimport tomatoIcon from \"../imgs/71-tomato.svg\"\nimport avocadoIcon from \"../imgs/72-avocado.svg\"\nimport kiwiIcon from \"../imgs/73-kiwi.svg\"\nimport pineappleIcon from \"../imgs/74-pineapple-1.svg\"\nimport peachIcon from \"../imgs/75-peach.svg\"\n\n// import cherryIcon from \"../imgs/76-cherry.svg\"\n// import strawberryIcon from \"../imgs/78-strawberry.svg\"\n// import grapesIcon from \"../imgs/79-grapes.svg\"\n// import bananaIcon from \"../imgs/81-banana.svg\"\n// import lemonIcon from \"../imgs/82-lemon.svg\"\n// import orangeIcon from \"../imgs/83-orange.svg\"\n// import pearIcon from \"../imgs/84-pear.svg\"\n// import appleIcon from \"../imgs/85-apple-1.svg\"\n\n\n\n\n\n\n\n// Components ========================= Components\nimport MemoryCard from \"./MemoryCard.js\"\n\nconst MemoryCards = (props) => {\n\n    /*\n    props: \n        randomize - bool, will toggle when randomize is needed\n        onCardClick - parent method (params: (cardId)) to handle game logic\n\n    state: \n        memoryCardsData - array of card data objects\n        memoryCardsDom  - div with memory card components\n    */\n\n    let counter = 0;\n    const getId = () => { return counter++; }\n\n    const [memoryCardsDom, setMemoryCardsDom] = useState(<span />);\n    const memoryCards = [\n        { title: 'croissant', src: croissantIcon, id: getId() },\n        { title: 'eggplant', src: eggplantIcon, id: getId() },\n        { title: 'watermelon', src: watermelonIcon, id: getId() },\n        { title: 'salad', src: saladIcon, id: getId() },\n        { title: 'taco', src: tacoIcon, id: getId() },\n        { title: 'french fries', src: frenchFriesIcon, id: getId() },\n        { title: 'burger', src: burgerIcon, id: getId() },\n        { title: 'hot dog', src: hotDogIcon, id: getId() },\n        { title: 'pizza', src: pizzaIcon, id: getId() },\n        { title: 'pancake', src: pancakeIcon, id: getId() },\n        { title: 'bacon', src: baconIcon, id: getId() },\n        { title: 'fried egg', src: friedEggIcon, id: getId() },\n        { title: 'cheese', src: cheeseIcon, id: getId() },\n        { title: 'corn', src: cornIcon, id: getId() },\n        { title: 'carrot', src: carrotIcon, id: getId() },\n        { title: 'cucumber', src: cucumberIcon, id: getId() },\n        { title: 'tomato', src: tomatoIcon, id: getId() },\n        { title: 'avocado', src: avocadoIcon, id: getId() },\n        { title: 'kiwi', src: kiwiIcon, id: getId() },\n        { title: 'pineapple', src: pineappleIcon, id: getId() },\n        // { title: 'peach', src: peachIcon, id: getId() },\n    ]\n\n\n    const createMemoryCardsDom = (cards) => {\n        setMemoryCardsDom(\n            <div className='memory-cards'>\n                {cards.map(card => (<MemoryCard key={card.id} title={card.title} src={card.src} id={card.id} clickAction={handleCardClick} />))}\n            </div>\n        )\n    }\n\n    const randomizeCards = () => {\n        let randomizedCards = []\n        let usedIndexes = []\n        for (let i = 0; i < memoryCards.length; i++) {\n            let rand = Math.floor(Math.random() * memoryCards.length)\n            if (!usedIndexes.includes(rand)) {\n                randomizedCards.push(memoryCards[rand])\n                usedIndexes.push(rand)\n            } else {\n                i--;\n            }\n        }\n        createMemoryCardsDom(randomizedCards)\n\n    }\n\n    const handleCardClick = (event) => {\n        props.onCardClick(event.target.id)\n    }\n\n    useEffect(() => {\n        randomizeCards();\n    }, [props.randomize])\n\n    useEffect(() => {\n        randomizeCards();\n    }, [])\n\n    return (\n        <div className='Memory-Cards'>\n            {memoryCardsDom}\n        </div>\n    );\n}\n\nexport default MemoryCards;","\nimport MemoryGameHeader from \"./MemoryGameHeader.js\"\nimport MemoryCards from \"./MemoryCards.js\"\n\nimport \"./css/MemoryGame.css\"\n\n\n\n\n\nimport { useEffect, useState } from \"react\"\n\n\nconst MemoryGame = (props) => {\n\n\n\n    const [score, setScore] = useState(0);                // number of current score\n    const [highScore, setHighScore] = useState(0);        // number of best score\n    const [clickedCards, setClickedCards] = useState([]); // array of clicked card ids\n    const [randomize, setRandomize] = useState(false);    // bool to send to cards when randomize is needed\n    const [hasPlayed, setHasPlayed] = useState(false);\n    const [messageToUser, setMessageToUser] = useState('');\n\n    const scrollToTop = () => {\n        document.body.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n\n    const getRandomGoodMessage = () => {\n\n        const messages = [\n            \"Keep it up!\",\n            \"Great job!\",\n            \"Good moves!\",\n            \"I wonder how many you can remember...\",\n            \"Wow!\",\n            \"Amazing!\",\n            \"*yawn*\",\n            \"I hope you can keep this up\",\n            \"Is that what you're wearing?\",\n            \"I'm impressed!\",\n            \"Can you keep this up?\",\n            \"I bet you already forgot what that last one was...\",\n            \"Nice\",\n            \":)\"\n        ]\n\n        const rand = (Math.floor(Math.random() * messages.length))\n        return (messages[rand])\n\n    }\n\n    const cardClicked = (cardId) => {\n\n        let gameOver = false;\n        clickedCards.forEach(id => {\n            if (cardId === id) {\n                gameOver = true;\n            }\n        })\n        if (gameOver !== true) {\n            let rand = Math.floor(Math.random() * 20)\n            if (rand % 2 || score === 1) { setMessageToUser(getRandomGoodMessage()) }\n            setRandomize(!randomize)\n            clickedCards.push(cardId)\n            setScore(score + 1)\n        } else {\n            handleGameOver();\n        }\n    }\n\n    const handleGameOver = () => {\n        scrollToTop();\n        setHasPlayed(true)\n        if (score > highScore) {\n            setHighScore(score)\n            saveHighScore();\n            setMessageToUser(`You lost... \\nBut you did beat your high score!`)\n        } else {\n            setMessageToUser(`You lost... I bet you can beat ${highScore} next time!`)\n        }\n        setScore(0)\n        setClickedCards([])\n        setRandomize(!randomize)\n\n    }\n\n    const getHighScoreFromMemory = () => {\n        const hs = localStorage.getItem('highScore')\n        if (hs === null || hs === undefined) setHighScore(0);\n        else setHighScore(hs);\n    }\n\n    const saveHighScore = () => {\n        localStorage.setItem('highScore', highScore)\n    }\n\n    useEffect(() => { getHighScoreFromMemory() }, [])\n    useEffect(() => { saveHighScore() }, [highScore])\n\n    return (\n        <div className='Memory-Game'>\n            <MemoryGameHeader score={score} highScore={highScore} />\n            <div className='game-container'>\n\n                <div className='how-to-play'>\n\n                    {(hasPlayed === false) ? (\n                        <div>\n                            <h2> How to play </h2>\n                            <ol>\n                                <li> Click any card </li>\n                                <li> Click any other card </li>\n                                <li> Don't click the same card twice! </li>\n                            </ol>\n                        </div>\n                    )\n                        :\n                        <div>\n                            <h2 className=\"message-to-user\"> {messageToUser} </h2>\n                        </div>\n                    }\n\n                </div>\n\n                <MemoryCards randomize={randomize} onCardClick={cardClicked} />\n            </div>\n\n            <div className='footer'>\n                <div id='author'>Game created by <a href=\"https://www.josiaheakle.com\" title=\"Josiah Eakle\">Josiah Eakle</a></div>\n                <div id=\"icon-provider\">Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default MemoryGame;","import './components/css/App.css';\nimport MemoryGame from './components/MemoryGame.js'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MemoryGame/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/css/index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}